 -- STUDENT PERFORMANCE ANALYSIS

-- What is the average score for each subject?
SELECT
AVG(math_score) AS AVG_Math_Score,
AVG(reading_score) AS AVG_Reading_Score,
AVG(writing_score) AS AVG_Writing_Score
FROM [Students Performance];

-- How does parental education level influence test scores?
SELECT 
parental_level_of_education,
AVG((math_score + reading_score + writing_score)/3.0) AS avg_test_score
FROM [Students Performance]
GROUP BY parental_level_of_education
ORDER BY avg_test_score desc;

--Is there a difference in scores based on gender or race?
SELECT
gender,
AVG(math_score) AS AVG_Math_Score,
AVG(reading_score) AS AVG_Reading_Score,
AVG(writing_score) AS AVG_Writing_Score,
AVG((math_score + reading_score + writing_score)/3.0) AS avg_test_score
FROM [Students Performance]
GROUP BY gender
ORDER BY avg_test_score desc;

SELECT
race_ethnicity,
AVG(math_score) AS AVG_Math_Score,
AVG(reading_score) AS AVG_Reading_Score,
AVG(writing_score) AS AVG_Writing_Score,
AVG((math_score + reading_score + writing_score)/3.0) AS avg_test_score
FROM [Students Performance]
GROUP BY race_ethnicity
ORDER BY avg_test_score desc;

-- Does test preparation impact student performance?
SELECT 
test_preparation_course,
AVG(math_score) AS AVG_Math_Score,
AVG(reading_score) AS AVG_Reading_Score,
AVG(writing_score) AS AVG_Writing_Score,
AVG((math_score + reading_score + writing_score)/3.0) AS avg_test_score
FROM [Students Performance]
GROUP By test_preparation_course;

-- Top 5 performing student group?
SELECT TOP 5
  gender,
  race_ethnicity,
  parental_level_of_education,
  test_preparation_course,
  AVG((math_score + reading_score + writing_score)/3.0) AS avg_score_per_student,
  COUNT(*) AS num_students
FROM [Students Performance]
GROUP BY
  gender,
  race_ethnicity,
  parental_level_of_education,
   test_preparation_course
ORDER BY avg_score_per_student DESC;

-- Bottom 5 performing student group?
SELECT TOP 5
  gender,
  race_ethnicity,
  parental_level_of_education,
  test_preparation_course,
  AVG((math_score + reading_score + writing_score)/3.0) AS avg_score_per_student,
  COUNT(*) AS num_students
FROM [Students Performance]
GROUP BY
  gender,
  race_ethnicity,
  parental_level_of_education,
   test_preparation_course
ORDER BY avg_score_per_student ASC;

--Who are the high performing student groups with low parental education level & No preparations
SELECT
  gender,
  race_ethnicity,
  parental_level_of_education,
  test_preparation_course,
  COUNT(*) AS num_students,
  AVG((math_score + reading_score + writing_score) / 3.0) AS avg_group_score
FROM [Students Performance]
WHERE
  test_preparation_course = 'none'
  AND parental_level_of_education IN ('some high school', 'high school', 'some college')
GROUP BY
  gender,
  race_ethnicity,
  parental_level_of_education,
  test_preparation_course
HAVING AVG((math_score + reading_score + writing_score) / 3.0) >= (
  SELECT AVG((math_score + reading_score + writing_score) / 3.0)
  FROM [Students Performance]
)
ORDER BY avg_group_score DESC;

-- Are there large student groups (with high counts) that are consistently below the overall average?
SELECT TOP 10
gender,
race_ethnicity,
parental_level_of_education,
test_preparation_course,
COUNT(*) AS num_students,
AVG((math_score + reading_score + writing_score) / 3.0) AS avg_group_score
FROM [Students Performance]
GROUP BY
gender,
race_ethnicity,
parental_level_of_education,
test_preparation_course
HAVING AVG((math_score + reading_score + writing_score) / 3.0)<(
  SELECT AVG((math_score + reading_score + writing_score) / 3.0)
  FROM [Students Performance])
ORDER BY num_students DESC;

-- How many student's average is below and above the overall average score?
SELECT 
  performance_category,
  COUNT(*) AS num_students
FROM (
  SELECT
    CASE 
      WHEN (math_score + reading_score + writing_score) / 3.0 > 67.7 THEN 'High Performer'
      WHEN (math_score + reading_score + writing_score) / 3.0 < 67.7 THEN 'Low Performer'
      ELSE 'Average Performer'
    END AS performance_category
  FROM [Students Performance]
) AS classified
GROUP BY performance_category
;

 